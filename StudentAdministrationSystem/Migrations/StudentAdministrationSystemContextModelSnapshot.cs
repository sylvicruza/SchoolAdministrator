// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAdministrationSystem.Data;

namespace StudentAdministrationSystem.Migrations
{
    [DbContext(typeof(StudentAdministrationSystemContext))]
    partial class StudentAdministrationSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentAdministrationSystem.Models.Assessment", b =>
                {
                    b.Property<int>("AssessmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssessmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseModuleId")
                        .HasColumnType("int");

                    b.Property<float>("Marks")
                        .HasColumnType("real");

                    b.HasKey("AssessmentID");

                    b.HasIndex("CourseModuleId");

                    b.ToTable("Assessment");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.CourseModule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("Marks")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DegreeProgrammeId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseModule");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.DegreeProgramme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int?>("ProgrammeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProgrammeTypeId");

                    b.ToTable("DegreeProgramme");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseModuleId")
                        .HasColumnType("int");

                    b.Property<int>("DegreeProgrammeId")
                        .HasColumnType("int");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("CourseModuleId");

                    b.HasIndex("DegreeProgrammeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.ProgrammeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCourseModule")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgrammeType");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cohort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeProgrammeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeProgrammeId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.Assessment", b =>
                {
                    b.HasOne("StudentAdministrationSystem.Models.CourseModule", "Course")
                        .WithMany("Assessment")
                        .HasForeignKey("CourseModuleId");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.CourseModule", b =>
                {
                    b.HasOne("StudentAdministrationSystem.Models.DegreeProgramme", "Programme")
                        .WithMany("CourseModules")
                        .HasForeignKey("DegreeProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAdministrationSystem.Models.Student", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.DegreeProgramme", b =>
                {
                    b.HasOne("StudentAdministrationSystem.Models.ProgrammeType", "ProgrammeType")
                        .WithMany()
                        .HasForeignKey("ProgrammeTypeId");
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.Enrollment", b =>
                {
                    b.HasOne("StudentAdministrationSystem.Models.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.HasOne("StudentAdministrationSystem.Models.CourseModule", "CourseModule")
                        .WithMany()
                        .HasForeignKey("CourseModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAdministrationSystem.Models.DegreeProgramme", "DegreeProgramme")
                        .WithMany()
                        .HasForeignKey("DegreeProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAdministrationSystem.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentAdministrationSystem.Models.Student", b =>
                {
                    b.HasOne("StudentAdministrationSystem.Models.DegreeProgramme", "DegreeProgramme")
                        .WithMany()
                        .HasForeignKey("DegreeProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
